language: cpp

matrix:
  include:
    # MPI 3.1
    - os: linux
      dist: focal
      compiler: gcc
      env:
        - H5GT_USE_EIGEN=True
        - H5GT_USE_XTENSOR=False
        - H5GT_USE_OPENCV=False
        - H5GT_UNIT_TESTS=True
        - H5GT_EXAMPLES=True
        - H5GT_PARALLEL_HDF5=True
        - H5GT_BUILD_h5gtpy=True
        - HDF5_USE_STATIC_LIBRARIES=False
        - CMAKE_GENERATOR="Ninja"
      addons:
        apt:
          packages:
            - libhdf5-mpi-dev
            - ninja-build

    # MPICH 3.1
    - os: linux
      dist: focal
      compiler: clang
      env:
        - H5GT_USE_EIGEN=True
        - H5GT_USE_XTENSOR=False
        - H5GT_USE_OPENCV=False
        - H5GT_UNIT_TESTS=True
        - H5GT_EXAMPLES=True
        - H5GT_PARALLEL_HDF5=True
        - H5GT_BUILD_h5gtpy=True
        - HDF5_USE_STATIC_LIBRARIES=False
        - CMAKE_GENERATOR="Ninja"
      addons:
        apt:
          packages:
            - libhdf5-mpich-dev
            - ninja-build

    # OpenMPI 3.1
    - os: linux
      dist: focal
      compiler: clang
      env:
        - H5GT_USE_EIGEN=True
        - H5GT_USE_XTENSOR=False
        - H5GT_USE_OPENCV=False
        - H5GT_UNIT_TESTS=True
        - H5GT_EXAMPLES=True
        - H5GT_PARALLEL_HDF5=True
        - H5GT_BUILD_h5gtpy=True
        - HDF5_USE_STATIC_LIBRARIES=False
        - CMAKE_GENERATOR="Ninja"
      addons:
        apt:
          packages:
            - libhdf5-openmpi-dev
            - ninja-build

    - os: windows
      # compiler: gcc
      env:
        - H5GT_USE_EIGEN=True
        - H5GT_USE_XTENSOR=True
        - H5GT_USE_OPENCV=True
        - H5GT_UNIT_TESTS=True
        - H5GT_EXAMPLES=True
        - H5GT_PARALLEL_HDF5=False
        - H5GT_BUILD_h5gtpy=True
        - HDF5_USE_STATIC_LIBRARIES=False
        - CMAKE_GENERATOR="Visual Studio 15 2017 Win64"

    - os: windows
      # compiler: clang
      env:
        - H5GT_USE_EIGEN=True
        - H5GT_USE_XTENSOR=True
        - H5GT_USE_OPENCV=True
        - H5GT_UNIT_TESTS=True
        - H5GT_EXAMPLES=True
        - H5GT_PARALLEL_HDF5=False
        - H5GT_BUILD_h5gtpy=True
        - CMAKE_GENERATOR="Visual Studio 16 2019 Win64"

    - os: osx
      osx_image: xcode12.2
      compiler: clang
      env:
        - H5GT_USE_EIGEN=False
        - H5GT_USE_XTENSOR=True
        - H5GT_USE_OPENCV=True
        - H5GT_UNIT_TESTS=True
        - H5GT_EXAMPLES=True
        - H5GT_PARALLEL_HDF5=False
        - H5GT_BUILD_h5gtpy=False
        - HDF5_USE_STATIC_LIBRARIES=True

env:
  global:
  - EIGEN3_ROOT=${TRAVIS_BUILD_DIR}/../eigen

before_install:
  - git clone --branch 3.4 https://gitlab.com/libeigen/eigen.git $EIGEN3_ROOT
  - export PATH=$EIGEN3_ROOT:$PATH

  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then 
      export TESTS_TARGET="RUN_TESTS";
      choco install --yes miniconda3;
      source C:/Tools/miniconda3/Scripts/activate;
      conda config --set always_yes yes --set changeps1 no;
      conda update -q conda;
      conda install -c conda-forge mamba;
      mamba install -c conda-forge xtl xsimd xtensor libopencv opencv hdf5;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
      export TESTS_TARGET="test";
      wget "http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      source $HOME/miniconda/bin/activate;
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda update -q conda;
      conda install -c conda-forge mamba;
      mamba install -c conda-forge xtl xsimd xtensor libopencv opencv hdf5 ninja;
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
      export TESTS_TARGET="test";
    fi

before_script:
  - if [[ "$TRAVIS_COMPILER" == "gcc" ]]; then 
      gcc --version;
    elif [[ "$TRAVIS_COMPILER" == "clang" ]]; then 
      clang --version;
    fi
  - cmake --version
  - python --version

script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p build && pushd build
  - >
    cmake --warn-uninitialized --debug-output
    -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON
    -DEigen3_ROOT:PATH=$EIGEN3_ROOT 
    -DH5GT_USE_EIGEN:BOOL=${H5GT_USE_EIGEN}
    -DH5GT_USE_XTENSOR:BOOL=${H5GT_USE_XTENSOR}
    -DH5GT_USE_OPENCV:BOOL=${H5GT_USE_OPENCV}
    -DH5GT_UNIT_TESTS:BOOL=${H5GT_UNIT_TESTS}
    -DH5GT_EXAMPLES:BOOL=${H5GT_EXAMPLES}
    -DH5GT_PARALLEL_HDF5:BOOL=${H5GT_PARALLEL_HDF5}
    -DH5GT_BUILD_h5gtpy=${H5GT_BUILD_h5gtpy}
    -DHDF5_USE_STATIC_LIBRARIES=${HDF5_USE_STATIC_LIBRARIES}  
    -G "${CMAKE_GENERATOR}" ../
  - cmake --build .
  - CTEST_OUTPUT_ON_FAILURE=1 cmake --build . --target ${TESTS_TARGET}
  # - popd
  # - bash tests/test_project_integration.sh;