language: cpp

matrix:
  include:
    - os: linux
      dist: focal
      compiler: gcc
      env:
        - H5GT_USE_Eigen=True
        - H5GT_USE_XTENSOR=True
        - H5GT_USE_OPENCV=True
        - H5GT_PARALLEL_HDF5=True
      # addons: 
      #   apt:
      #     packages:
      #       - libhdf5-openmpi-dev
      #       - libeigen3-dev
      #       - ninja-build
      #     sources:
      #       - ubuntu-toolchain-r-test

    - os: linux
      dist: focal
      compiler: clang
      env:
        - H5GT_USE_Eigen=True
        - H5GT_USE_XTENSOR=True
        - H5GT_USE_OPENCV=True
        - H5GT_PARALLEL_HDF5=True
      # addons: 
      #   apt:
      #     packages:
      #       - libhdf5-openmpi-dev
      #       - libeigen3-dev
      #       - ninja-build
      #     sources:
      #       - ubuntu-toolchain-r-test

    - os: windows
      compiler: gcc
      env:
        - H5GT_USE_XTENSOR=True
        - H5GT_USE_OPENCV=True
        - H5GT_PARALLEL_HDF5=False

    - os: windows
      compiler: clang
      env:
        - H5GT_USE_XTENSOR=True
        - H5GT_USE_OPENCV=True
        - H5GT_PARALLEL_HDF5=False

    - os: osx
      osx_image: xcode12.2
      compiler: clang
      env:
        - H5GT_USE_XTENSOR=True
        - H5GT_USE_OPENCV=True
        - H5GT_PARALLEL_HDF5=False

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
      MINCONDA_OS="Linux-x86_64";
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
      MINCONDA_OS="MacOSX-x86_64";
    fi

  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then 
      export CMAKE_GENERATOR="Visual Studio 15 2017 Win64";
      export TESTS_TARGET="RUN_TESTS";
      choco install --yes miniconda3;
      source C:/Tools/miniconda3/Scripts/activate;
    else
      export CMAKE_GENERATOR="Ninja";
      export TESTS_TARGET="test";
      wget "http://repo.continuum.io/miniconda/Miniconda3-latest-$MINCONDA_OS.sh" -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      source $HOME/miniconda/bin/activate;
      hash -r;
    fi

  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install -c conda-forge mamba
  - mamba install -c conda-forge xtl xsimd xtensor libopencv opencv hdf5 eigen;

before_script:
- if [[ "$TRAVIS_COMPILER" == gcc ]]; then
    gcc --version;
  elif [[ "$TRAVIS_COMPILER" == clang ]]; then
    clang --version;
  fi
  - cmake --version
  - python --version

script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p build && pushd build
  - >
    cmake 
    -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON
    -DH5GT_TEST_SINGLE_INCLUDES:BOOL=ON
    -DH5GT_PARALLEL_HDF5:BOOL=${H5GT_PARALLEL_HDF5}
    -DH5GT_USE_EIGEN:BOOL=ON
    -DH5GT_USE_XTENSOR:BOOL=${H5GT_USE_XTENSOR}
    -DH5GT_USE_OPENCV:BOOL=${H5GT_USE_OPENCV}
    -G "${CMAKE_GENERATOR}" ../
  - cmake --build .
  - CTEST_OUTPUT_ON_FAILURE=1 cmake --build . --target ${TESTS_TARGET}
  # - popd
  # - bash tests/test_project_integration.sh;