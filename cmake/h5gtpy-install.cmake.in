# CMP001 is somehow connected with wether to use policy
# set from child projects to parents (i.e. connected with
# scope of policies)
cmake_policy(SET CMP0011 NEW)
# CMP0012 is needed in situations like `if(ON)` or `if(TRUE)`
# and this policy must be set in this file or it won't work
cmake_policy(SET CMP0012 NEW)

#-----------------------------------------------------------------------------
# Finding RUNTIME DEPS (i.e. hdf5.dll)
#-----------------------------------------------------------------------------
message(STATUS "Resolving h5gtpy RUNTIME dependencies...")

file(GET_RUNTIME_DEPENDENCIES
  LIBRARIES "$<TARGET_FILE:_h5gt>"
  RESOLVED_DEPENDENCIES_VAR res_deps
  UNRESOLVED_DEPENDENCIES_VAR unres_deps
  CONFLICTING_DEPENDENCIES_PREFIX confl_deps
  DIRECTORIES
    "@HDF5_RUNTIME_DIR@"
    "@ZLIB_RUNTIME_DIR@"
  PRE_INCLUDE_REGEXES 
    "^.*([Hh][Dd][Ff][5]).*$"
    "^.*([Zz][Ll][Ii][Bb]).*$"
  PRE_EXCLUDE_REGEXES "[^\n]+"
)

foreach(_file ${res_deps})
  message(STATUS "Dependency Resolved: ${_file}")
endforeach()

foreach(_file ${unres_deps})
  message(STATUS "Dependency Unresolved: ${_file}")
endforeach()

foreach(_file ${confl_deps_FILENAMES})
  message(STATUS "Found conflicting dependency: ${_file}")

  foreach(_file_path ${confl_deps_${_file}})
    message(${_file_path})
  endforeach()
endforeach()

list(LENGTH unres_deps unres_deps_LEN)
if(${unres_deps_LEN} GREATER 0)
  message(FATAL_ERROR "There are UNRESOLVED runtime dependencies.
  Try setting `HDF5_RUNTIME_DIR, ZLIB_RUNTIME_DIR` and rerun `cmake .` and `cmake --install .`
  (you don't have to rebuild the project)")
endif()

list(LENGTH confl_deps confl_deps_LEN)
if(${confl_deps_LEN} GREATER 0)
  message(FATAL_ERROR "There are CONFLICTING runtime dependencies.
  Try setting `HDF5_RUNTIME_DIR, ZLIB_RUNTIME_DIR` and rerun `cmake .` and `cmake --install .`
  (you don't have to rebuild the project)")
endif()


#-----------------------------------------------------------------------------
# Setting variables needed to configure in-files
#-----------------------------------------------------------------------------
set(H5GTPY_DIR @CMAKE_CURRENT_BINARY_DIR@/h5gtpy)

file(MAKE_DIRECTORY "${H5GTPY_DIR}")
file(MAKE_DIRECTORY "${H5GTPY_DIR}/h5gtpy")

set(SETUP_PY_IN "@CMAKE_SOURCE_DIR@/cmake/setup.py.in")
set(SETUP_PY_OUT "@CMAKE_CURRENT_BINARY_DIR@/setup.py")

set(MANIFEST_IN "@CMAKE_SOURCE_DIR@/cmake/MANIFEST.in.in")
set(MANIFEST_OUT "@CMAKE_CURRENT_BINARY_DIR@/MANIFEST.in")

set(INIT_PY_IN "@CMAKE_SOURCE_DIR@/cmake/__init__.py.in")
set(INIT_PY_OUT "${H5GTPY_DIR}/__init__.py")

set(INIT_PY_IN_TEST "@CMAKE_SOURCE_DIR@/cmake/__init__.py.in.test")
set(INIT_PY_OUT_TEST "${H5GTPY_DIR}/tests/__init__.py")

set(STUBS_INIT_IN "@CMAKE_SOURCE_DIR@/stubs/h5gtpy/_h5gt-stubs/h5gt.pyi")
set(STUBS_INIT_OUT "${H5GTPY_DIR}/h5gtpy/h5gt.pyi")

file(GLOB_RECURSE TEST_PY_IN_LIST "@CMAKE_SOURCE_DIR@/tests/pytest/*.py")
set(TEST_PY_OUT_DIR "${H5GTPY_DIR}/tests")


#-----------------------------------------------------------------------------
# Configuring in-files
#-----------------------------------------------------------------------------

# copy runtime deps or change __init__.py file to modify ENV PATH
if(@COPY_H5GTPY_RUNTIME_DEPS@)
  foreach(_file ${res_deps})
    message("Copying runtime dependency:\t${_file} \nto:\t${H5GTPY_DIR}")
    configure_file("${_file}" "${H5GTPY_DIR}" COPYONLY)
  endforeach()
else()
  foreach(_file ${res_deps})
    get_filename_component(_dir "${_file}" DIRECTORY)
    list(APPEND res_deps_dirs "${_dir}")
  endforeach()

  get_filename_component(CMAKE_ABS_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}" ABSOLUTE)
  list(APPEND res_deps_dirs "${CMAKE_ABS_INSTALL_PREFIX}/lib")  # add h5gt dir
  list(REMOVE_DUPLICATES res_deps_dirs)   # remove repeating dirs

  # `PYTHON_INIT_PATH_VAR` is used to configure `INIT_PY_IN` file
  set(PYTHON_INIT_PATH_VAR "import os\n")
  foreach(_dir ${res_deps_dirs})
    set(PYTHON_INIT_PATH_VAR "${PYTHON_INIT_PATH_VAR}\n
if not os.environ['PATH'].__contains__('${_dir}'):
  os.environ['PATH'] = '${_dir}' + os.pathsep + os.environ['PATH']")
  endforeach()
endif()

configure_file("${SETUP_PY_IN}" "${SETUP_PY_OUT}")
configure_file("${MANIFEST_IN}" "${MANIFEST_OUT}")
configure_file("${INIT_PY_IN}" "${INIT_PY_OUT}")
configure_file("${INIT_PY_IN_TEST}" "${INIT_PY_OUT_TEST}" COPYONLY)
configure_file("${STUBS_INIT_IN}" "${STUBS_INIT_OUT}" COPYONLY)
configure_file("$<TARGET_FILE:_h5gt>" "${H5GTPY_DIR}" COPYONLY)

# copy pytests
foreach(_file ${TEST_PY_IN_LIST})
  configure_file("${_file}" "${TEST_PY_OUT_DIR}" COPYONLY)
endforeach()


#-----------------------------------------------------------------------------
# Pip install
#-----------------------------------------------------------------------------
execute_process(COMMAND @PYTHON_EXECUTABLE@ -m pip install --upgrade pip)   # is very necessary
execute_process(COMMAND @PYTHON_EXECUTABLE@ -m pip install @CMAKE_CURRENT_BINARY_DIR@)
